// Generated by LiveScript 1.3.1
(function(){
  "use strict";
  var _module;
  _module = function(_, moment, fs, $, __, koa, coBody, b64, debug, grader){
    var app, grade, create, bringup, iface;
    debug = debug('server');
    grade = grader.grade;
    create = function(){
      var parse;
      app = koa();
      parse = coBody;
      debug("koa registered");
      app.use(function*(){
        var data, req, semi, graderResponse, e;
        debug("request received");
        if (this.method !== 'POST') {
          this['throw'](404, 'sorry, only POST methods allowed');
        } else {
          try {
            data = {};
            req = yield parse.json(this.req);
            semi = JSON.parse(req.xqueue_body);
            data.student_info = JSON.parse(semi.student_info);
            data.student_response = semi.student_response;
            data.grader_payload = JSON.parse(semi.grader_payload).payload;
            data.grader_payload = b64.decode(data.grader_payload);
            data.grader_payload = JSON.parse(data.grader_payload);
            debug(data.grader_payload);
            graderResponse = yield grade(data.student_response, data.grader_payload);
            this.body = graderResponse;
          } catch (e$) {
            e = e$;
            debug(e);
            this.response.status = 406;
            this.response.body = {
              message: e
            };
          }
        }
      });
      debug("koa post method registered");
      return app;
    };
    bringup = function(port){
      debug("listening on: http://localhost:" + port);
      return create().listen(port);
    };
    iface = {
      create: create,
      bringup: bringup
    };
    return iface;
  };
  module.exports = _module(require('lodash'), require('moment'), require('fs'), require('bluebird'), require('shelljs'), require('koa'), require('co-body'), require('base64-url'), require('debug'), require('./grader'));
}).call(this);
